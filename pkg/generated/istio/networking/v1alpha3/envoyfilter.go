// Code generated by xns-informer-gen. DO NOT EDIT.

package v1alpha3

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	v1alpha3 "istio.io/client-go/pkg/apis/networking/v1alpha3"
	informers "istio.io/client-go/pkg/informers/externalversions/networking/v1alpha3"
	listers "istio.io/client-go/pkg/listers/networking/v1alpha3"
	"k8s.io/client-go/tools/cache"
)

type envoyFilterInformer struct {
	informer cache.SharedIndexInformer
}

var _ informers.EnvoyFilterInformer = &envoyFilterInformer{}

func NewEnvoyFilterInformer(f xnsinformers.SharedInformerFactory) informers.EnvoyFilterInformer {
	resource := v1alpha3.SchemeGroupVersion.WithResource("envoyfilters")
	converter := xnsinformers.NewListWatchConverter(
		f.GetScheme(),
		&v1alpha3.EnvoyFilter{},
		&v1alpha3.EnvoyFilterList{},
	)

	informer := f.ForResource(resource, xnsinformers.ResourceOptions{
		ClusterScoped:      false,
		ListWatchConverter: converter,
	})

	return &envoyFilterInformer{informer: informer.Informer()}
}

func (i *envoyFilterInformer) Informer() cache.SharedIndexInformer {
	return i.informer
}

func (i *envoyFilterInformer) Lister() listers.EnvoyFilterLister {
	return listers.NewEnvoyFilterLister(i.informer.GetIndexer())
}
